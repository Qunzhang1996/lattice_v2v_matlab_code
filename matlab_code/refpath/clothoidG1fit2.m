function [k0,k1,l,dk0_dtheta0,dk0_dtheta1,dk1_dtheta0,dk1_dtheta1] = clothoidG1fit2(z0,theta0,z1,theta1)
%MATLABSHARED.TRACKING.INTERNAL.SCENARIO.CLOTHOIDG1FIT2 Fit clothoid segment suitable for G1 Hermite interpolation.
%
%   This function is for internal use only and may be removed in a later
%   release.
%
%   [K0,K1,L] = MATLABSHARED.TRACKING.INTERNAL.SCENARIO.CLOTHOIDG1FIT(Z0,THETA0,Z1,THETA1)
%   fits a curve in the complex plane whose curvature varies linearly with
%   respect to distance traveled between points Z0 and Z1, with
%   corresponding tangent angles THETA0 and THETA1.  It returns the initial
%   curvature K0, final curvature K1, and length of the curve, L.  
%
%   Example:
%   % Fit a clothoid curve starting at (3,4) and ending at (1,7) with an
%   % initial tangent at 45 degrees and final tangent at 90 degrees.
%   matlabshared.tracking.internal.scenario.clothoidG1fit(complex(3,4),deg2rad(45),complex(1,7),deg2rad(90))

%   Reference: 
%   [1] Enrico Bertolazzi, Marco Frego. "Fast and accurate clothoid fitting"
%       ArXiv:1209.0910v1 [math.NA].

%   Copyright 2017-2018 The MathWorks, Inc.

%#codegen

z = z1-z0;
phi = angle(z);
phi0 = angle(exp(1i*(theta0-phi)));
phi1 = angle(exp(1i*(theta1-phi)));
d = phi1-phi0;
c = phi0;

if nargout<4
    % just k0, k1 and l are desired.
    a = fetchA(phi0, phi1);
    f = fresnelg1(a, d, c);
    l = abs(z)./real(f);
else
    % include derivatives
    [a, da_dphi0, da_dphi1] = fetchAgrad(phi0, phi1);
    [f, df_da] = fresnelg1(a, d, c);
    l = abs(z)./real(f);
    
    %dl_da = -abs(z).*real(df_da)./real(f).^2;
    dl_da = -abs(z).*real(df_da./f.^2);
    
    %dk0_da = (d-a).*(-dl_da./l.^2) - 1./l; %d = phi1-phi0
    %dk1_da = (d+a).*(-dl_da./l.^2) + 1./l;
    
    dk0_dtheta0 = (d-a) .* (-dl_da.*da_dphi0./l.^2) + (-1-da_dphi0)./l;
    dk0_dtheta1 = (d-a) .* (-dl_da.*da_dphi1./l.^2) + ( 1-da_dphi1)./l;
    dk1_dtheta0 = (d+a) .* (-dl_da.*da_dphi0./l.^2) + (-1+da_dphi0)./l;
    dk1_dtheta1 = (d+a) .* (-dl_da.*da_dphi1./l.^2) + ( 1+da_dphi1)./l;

    dk0_dtheta0(l==0) = 0;
    dk0_dtheta1(l==0) = 0;
    dk1_dtheta0(l==0) = 0;
    dk1_dtheta1(l==0) = 0;
end

k0 = (d-a)./l;
k1 = (d+a)./l;

k0(l==0) = 0;
k1(l==0) = 0;


function [z,dz] = fresnelg1(a,d,c)
%   Evaluate generalized fresnel
%        /1
%        |
%   z =  |   exp(i * (a*s.^2 + (d-a)*s + c)) ds
%        |
%        /0
%
%   and its partial derivative, dz/da.

z = zeros(size(a),'like',1i);
dz = zeros(size(a),'like',1i);

criteria = abs((d-a).^2./(4*a)) < 200*pi;
ilarge = find(criteria);
ismall = find(~criteria);
izero = find(d==0 & a==0);

if ~isempty(ilarge)
    [z(ilarge),dz(ilarge)] = fresnelgLargea1(a(ilarge),d(ilarge),c(ilarge));
end

if ~isempty(ismall)
    [z(ismall),dz(ismall)] = fresnelgSmalla1(a(ismall),d(ismall),c(ismall));
end

if ~isempty(izero)
    z(izero) = exp(1i*c(izero));
    dz(izero) = 0;
end


function [rsfa, drsfa] = fresnelgLargea1(a,d,c)
%  Evaluate
%
%       /L
%       |
%   z = |  exp(i * ((dk/2)*s.^2 + k*s + theta)) ds
%       |
%       /0
%
%     = sqrt(pi/dk) * exp(i*(theta - k*k/(2*dk)) *
%         (fresnel(sqrt(dk/pi)*L+k/sqrt(pi*dk)) - fresnel(k/sqrt(pi*dk))
%
%   and its partial derivative dz/da, (a~=0) where:
%        dk = 2*a, k = d-a, c = theta, and L = 1.

% coder.noImplicitExpansionInFunction;
a1 = sqrt(complex(2*a/pi,0 ));
% Implicit expansion disabled here
a2 = (d-a)./sqrt(complex(2*pi*a, 0));
% Implicit expansion disabled here
fa1 = fresnel(a1+a2);
fa2 = fresnel(a2);
% Implicit expansion disabled here
fa = fa1 - fa2;

s = sqrt(complex(pi./(2*a), 0));
% Implicit expansion disabled here
r = exp(1i*(c-(d-a).^2./(4*a)));
% Implicit expansion disabled here
rs = s.*r;
% Implicit expansion disabled here
rsfa = rs.*fa;

da1 = 1./sqrt(complex(2*pi*a, 0));
% Implicit expansion disabled here
da2 = (d-a).*(-pi./sqrt(complex(2*pi*a, 0)).^3)-1./sqrt(complex(2*pi*a, 0));
% Implicit expansion disabled here
dfa1 = exp(1i*pi/2*(a1+a2).^2).*(da1+da2);
% Implicit expansion disabled here
dfa2 = exp(1i*pi/2*(a2   ).^2).*(da2);
% Implicit expansion disabled here
dfa = sign(a).*(dfa1 - dfa2);

ds = -sqrt(complex(pi./(2*a), 0)).^3/pi;
% Implicit expansion disabled here
ratio = (d-a)./(4.*a);

% Implicit expansion disabled here
dr = r .* 2i .* ratio .* (2 .* ratio + 1);

% Implicit expansion disabled here
drs = s.*dr + r.*ds;
% Implicit expansion disabled here
drsfa = rs .* dfa + fa .* drs;


function [z,dz] = fresnelgSmalla1(a,d,c)
% Evaluate:
%              /1
%              |
%        z  =  |   exp(i * (a*s.^2 + (d-a)*s + c)) ds
%              |
%              /0
%
% and the partial derivative dz/da by Maclaurin series expansion about a=0.

%coder.noImplicitExpansionInFunction;
dk = 2*a;
% Implicit expansion disabled here
k = d-a;
theta = c;

% Implicit expansion disabled here
C = 0.5i*dk ./ k.^2;
nik = -1i*k;
e = exp(-nik);

A = 0.5i*dk;
m2C = -2*C;

% Implicit expansion disabled here
dm2C = -(2i*dk + 2i*k)./k.^3;
dA11 = 1i;

% Implicit expansion disabled here
t = (1-e)./nik;
% Implicit expansion disabled here
dt = -(k.*exp(1i*k) + 1i*(exp(1i*k)-1))./k.^2;
nhik = nik/2;
dnhik = 0.5i;

p = -e;
dp = 1i*exp(1i*k);

z = t;
dz = dt;

for n=1:20
    % Implicit expansion disabled here
    df = (2*n-1).*dt + dnhik*p + dp.*(n+nhik);
    % Implicit expansion disabled here
    f = (2*n-1).*t + (n+nhik).*p;

    % Implicit expansion disabled here
    dt = m2C .* df + f .* dm2C;
    % Implicit expansion disabled here
    t = m2C .* f;

    % Implicit expansion disabled here
    dz = dz + dt;
    % Implicit expansion disabled here
    z = z + t;

    % Implicit expansion disabled here
    dp = (p.*dA11 + A.*dp)./(n+1);
    % Implicit expansion disabled here
    p = p.*A./(n+1);
end

% Implicit expansion disabled here
z = z .* exp(1i*theta);
% Implicit expansion disabled here
dz = dz .* exp(1i*theta);


function a = fetchA(x,y)
u = x-y;
v = x+y;
r = u.^2;
s = v.^2;
c = coefs25;

n = numel(c);
m = 25; %(sqrt(8*n+1)-3)/2;

cumr = cumprod([ones(size(x)) repmat(r,1,m)],2);
cums = cumprod([ones(size(x)) repmat(s,1,m)],2);

a = zeros(size(x));

i=0;
j=0;

while n>0
    a = a + c(n).*cumr(:,i+1).*cums(:,j+1);
    j = j+1;
    if i+j > m
        i = i+1;
        j = 0;
    end
    n = n-1;
end

a = 3.*v.*a;


function [a, dadx, dady] = fetchAgrad(x,y)
u = x-y;
v = x+y;
r = u.^2;
s = v.^2;
c = coefs25;

n = numel(c);
m = 25; %(sqrt(8*n+1)-3)/2;

cumr = cumprod([ones(size(x)) repmat(r,1,m)],2);
cums = cumprod([ones(size(x)) repmat(s,1,m)],2);

a = zeros(size(x));
dadr = zeros(size(x));
dads = zeros(size(x));

i=0;
j=0;

while n>0
    a = a + c(n).*cumr(:,i+1).*cums(:,j+1);
    if (i>0)
       dadr = dadr + ((i+1)*c(n)).*cumr(:,i).*cums(:,j+1);
    end
    
    if (j>0)
       dads = dads + ((j+1)*c(n)).*cumr(:,i+1).*cums(:,j);
    end
    j = j+1;
    if i+j > m
        i = i+1;
        j = 0;
    end
    n = n-1;
end

% r = u.^2 = (x-y).^2
% drdx =  2.*u;
% drdy = -2.*u;

% s = v.^2;
% dsdx = 2.*v;
% dsdy = 2.*v;
% dadx = 3.*(v.*(dadr.*drdx+dads.*dsdx)+a.*dvdx);
% dady = 3.*(v.*(dadr.*drdy+dads.*dsdy)+a.*dvdy);

dadx = 3.*(2.*v.*(dads.*v+dadr.*u)+a);
dady = 3.*(2.*v.*(dads.*v-dadr.*u)+a);
a = 3.*v.*a;

function c=coefs25
c = [ ...
-1.536148108853210899e-40
-5.178200370896866162e-38
5.808051697936707304e-38
-6.292210979470284174e-36
1.774412941535902244e-35
-9.826687345316086498e-36
-3.055701181698959628e-34
1.998868152443076391e-33
-2.700762123082594900e-33
9.649707662856253492e-34
-8.501465945036209432e-33
8.761373685472004901e-32
-2.825867989378435842e-31
2.363760485671616909e-31
-5.855626660437210615e-32
-1.286396252499643150e-31
2.229093841830141966e-30
-1.105705996350723212e-29
2.313934910118575540e-29
-1.263022356264948921e-29
2.006856465063936392e-30
-1.105237750215913636e-30
3.030972671964250823e-29
-2.571532350202980218e-28
7.935782076249621225e-28
-1.183442353846261550e-27
3.751815250049465634e-28
-9.598875869982714067e-30
-5.844466190277288845e-30
2.279930226703184193e-28
-3.118708591261201004e-27
1.693795359399734701e-26
-3.423425933817758397e-26
3.675290577810476958e-26
-1.618329434010873135e-27
-2.920907790974628521e-27
-2.049349433305153257e-29
1.023209153075826177e-27
-2.011987241542016107e-26
1.815719166321214301e-25
-6.827878227394866508e-25
7.928970722855372737e-25
-5.171314027813982448e-25
-3.575740173826986328e-25
1.719152154960767291e-25
-5.001307006229815014e-29
2.923461642039436910e-27
-7.337262773580973434e-26
9.697856388657526081e-25
-6.397645855175716353e-24
1.607345507230643266e-23
-7.374635877950660294e-25
-7.052234304877466602e-24
1.480575556360862444e-23
-5.196535240427303895e-24
-8.539179217301913181e-29
5.496269289906842167e-27
-1.554689177819441061e-25
2.604979526175129606e-24
-2.617205888132783615e-23
1.298598203751054927e-22
-1.423772303418445970e-22
-5.828290366187670934e-22
4.113350836030862796e-22
-1.742659308147939040e-22
8.077862562093180180e-23
-9.773812673570055819e-29
6.621235584543697237e-27
-1.770707243674861265e-25
2.805713351187966518e-24
-3.486997075968754345e-23
3.024187121486502886e-22
-9.920123102090990730e-22
-3.214956686611618473e-21
1.871024970703166090e-20
-1.245354184536961797e-21
-7.506247215405087383e-21
2.849986585296451751e-22
-6.920711218290438918e-29
4.417983083575472362e-27
-4.476252488277979133e-26
-2.450817653228083030e-24
7.191414060482039157e-23
-7.267387509895447574e-22
3.357144104786671909e-21
-1.590687874453878199e-20
1.071537066085356853e-19
-2.181390076225877130e-19
-3.788277347613761881e-19
4.418835795718564928e-19
-5.204632305492229639e-20
-2.817093539681646358e-29
7.891411479454844290e-28
1.528966070127476020e-25
-1.133288098771886403e-23
3.310447557226885137e-22
-4.964751213857875426e-21
3.971538401521638482e-20
-1.629082126984718931e-19
3.366125166639129931e-19
-3.362759183841939817e-19
-2.832320898872997860e-18
1.534878010771758850e-17
-1.223124392444767433e-17
1.546026915296500771e-18
-1.035025994042578681e-29
-4.741404317155178733e-28
1.970767241775368523e-25
-1.449578888904265892e-23
5.137834079621168548e-22
-1.021077451978658259e-20
1.165542649503511031e-19
-7.142177933087759119e-19
1.636528319117690832e-18
4.917056813083721063e-18
-4.418623429106385294e-17
1.624794761388489069e-16
-3.418783506278010448e-16
2.249556326813552355e-16
-2.830417244223390946e-17
-9.541909078800869416e-30
4.334163522135850401e-28
7.306067728767270093e-26
-8.478917547044198589e-24
3.974637096872940807e-22
-1.035019853365156583e-20
1.589371276512772978e-19
-1.372108974042335699e-18
4.786886980496576336e-18
1.969942681604233543e-17
-2.759564769919401438e-16
1.261212276584668344e-15
-3.319975828014404682e-15
5.128410909749332227e-15
-2.977395412518177191e-15
3.668622238811693788e-16
-7.137611144327920122e-30
8.607032767861001110e-28
-2.525341126142378247e-26
-1.429985806399277993e-24
1.420067825881765846e-22
-5.290127390173991213e-21
1.087914893026173747e-19
-1.246890541247911155e-18
5.651703115185148959e-18
4.073824764700649009e-17
-7.719301689157689347e-16
5.128029409234423837e-15
-1.883025196509887730e-14
4.208210242098345629e-14
-5.481652183153904556e-14
2.905628912776109483e-14
-3.504903630108783873e-15
-2.703271239427811916e-30
4.443984521767932132e-28
-2.856153362978162472e-26
7.426349314965318274e-25
7.764820529161182313e-24
-1.131340762996078169e-21
3.499248998222845222e-20
-5.112370621223240149e-19
1.908283806913923776e-18
6.021611244739580169e-17
-1.185513373858185562e-15
1.064760205766582855e-14
-5.591531862080961449e-14
1.809609909032683086e-13
-3.638598558684581910e-13
4.241006950155927258e-13
-2.106362282048389010e-13
2.438552940830840708e-14
-4.854781804452889117e-31
9.557008127953709438e-29
-7.857205475248257619e-27
3.317476918344745156e-25
-6.214234125876885793e-24
-5.099171299656621108e-23
5.139299070829093231e-21
-8.807706142947147035e-20
-5.818276664044885372e-19
5.141927915493584224e-17
-1.044076975221460028e-15
1.189809423853985718e-14
-8.536793701127116165e-14
3.951312662095726154e-13
-1.174853334149266524e-12
2.191725728280879369e-12
-2.356680988482056627e-12
1.079502040826172770e-12
-1.583746590695586358e-13
-2.753350722542042155e-32
5.761918283770897738e-30
-4.647165711678786310e-28
1.404842236079187357e-26
3.765096224114458409e-25
-4.922843583132732169e-23
1.907172920517934700e-21
-3.349078388220190934e-20
-7.018689437542322040e-20
1.832412410465582208e-17
-4.788397655040773356e-16
7.048730390771593120e-15
-6.735734123826801038e-14
4.311438265545338491e-13
-1.843661849642266296e-12
5.165548192147833452e-12
-9.149850233352744175e-12
9.537680651866120047e-12
-5.509696582339131592e-12
-1.925668841496151088e-12
2.699390791303199690e-33
-8.365850853374867413e-31
1.236011175949815848e-28
-1.139105728656407105e-26
7.194311614083776542e-25
-3.227840161118720568e-23
1.031373618046297224e-21
-2.259595268017038272e-20
2.901332857046633740e-19
-1.418988063657512709e-19
-8.257587775197483732e-17
1.953552442019383650e-15
-2.603331625445089981e-14
2.290579836836983262e-13
-1.373094232611081651e-12
5.579796730048863922e-12
-1.504445636639464160e-11
2.561274766116428926e-11
-1.962781679619633358e-11
-2.803617229522030303e-11
-1.961547830494641252e-10
3.893492537797395712e-34
-1.263960912623581855e-31
1.928768287835922855e-29
-1.833223720492837365e-27
1.209253113106451071e-25
-5.823683513532627792e-24
2.091558178235469848e-22
-5.596409961277387172e-21
1.083357986979717261e-19
-1.373666633531138549e-18
6.620963365584728258e-18
1.436205362667391667e-16
-4.015909576545087709e-15
5.320276578988178967e-14
-4.539914502192530426e-13
2.634395111371690272e-12
-1.042660380852437792e-11
2.737881315820346512e-11
-2.421303296519889199e-11
-6.435891484899660087e-11
8.711110887610973200e-11
-1.588808258050310109e-08
1.204937932430581557e-35
-4.361077010821458211e-33
7.493643475744896908e-31
-8.110524536431788928e-29
6.170508838637021461e-27
-3.480752271664828960e-25
1.494819133866770409e-23
-4.936814656372704943e-22
1.249911058254529142e-20
-2.379320712055482797e-19
3.232232748274195578e-18
-2.649850772640421053e-17
7.873103301574805073e-18
3.277533149129609193e-15
-5.180769826768729493e-14
4.627326446279139863e-13
-2.723978552417098735e-12
1.089671688365076941e-11
-1.864598633765163750e-11
2.545961759143515539e-12
-1.334765483746807290e-08
1.316113227673104741e-07
-1.322753474160842939e-06
-9.798462501088551874e-38
3.290043233333565109e-35
-4.458175405725483801e-33
2.582481772947329436e-31
5.204961535786025271e-30
-2.158387651831141359e-27
1.947695075761068325e-25
-1.071631626421225179e-23
4.144065724062574784e-22
-1.181762431945179810e-20
2.524933915504637752e-19
-4.023394838996510488e-18
4.641691353917710077e-17
-3.547675951565109239e-16
1.199926283708012320e-15
8.516412269170767028e-15
-1.527199343162684014e-13
1.144986763713884823e-12
-3.659946140105518119e-12
-4.610394045246858422e-11
-4.742421396432501415e-09
1.409553584873511286e-08
1.141516239376346197e-05
-1.190476179191485480e-04
-7.748712747620725843e-39
3.157679037872868140e-36
-5.925013504700742248e-34
6.764378948447519300e-32
-5.220570875188386996e-30
2.850678857416079152e-28
-1.109837076771067440e-26
2.946864543687828255e-25
-4.232865743837551299e-24
-3.390127633576883811e-23
3.840799059998609082e-21
-1.193344834298510646e-19
2.370257605437861262e-18
-3.370908629990512944e-17
3.524042274863571390e-16
-2.688297081936283993e-15
1.442693876829224741e-14
-4.578508702867590880e-14
1.671010324348624703e-14
-1.102414306787300949e-11
-3.307906239281102506e-10
2.837665821479175306e-08
2.826534744930107605e-06
3.968254148844004177e-05
-1.666666666688938064e-02
-8.684159635623172916e-42
3.193913129690508076e-39
-4.849039087568784729e-37
3.272912244086284147e-35
5.398058616228955275e-34
-3.368693622639122264e-31
3.719770780725654074e-29
-2.538041293811173052e-27
1.249440481716304521e-25
-4.696603628073917210e-24
1.385230718762533085e-22
-3.250982168246777329e-21
6.110008526780176131e-20
-9.205948563585960200e-19
1.108192540456444914e-17
-1.057586802737231308e-16
7.920139233623935975e-16
-4.551496559720221538e-15
1.329625693185453408e-14
-3.345171633728989013e-13
1.710190409883683381e-11
2.430039265146040753e-09
4.615574821602786413e-08
-1.546072972260936914e-05
-2.380952380992609838e-03
1.000000000000004663e+00];